jenkins:
  systemMessage: "Jenkins configured automatically by Jenkins Configuration as Code plugin\n\n"
  securityRealm:
    local:
      allowsSignup: false
      users:
       - id: ${JENKINS_ADMIN_ID}
         password: ${JENKINS_ADMIN_PASSWORD}
    # ldap:
    #   configurations:
    #     - server: ldap.acme.com
    #       rootDN: dc=acme,dc=fr
    #       managerDN: "manager"
    #       managerPasswordSecret: "${LDAP_PASSWORD}"
    #       userSearch: "(&(objectCategory=User)(sAMAccountName={0}))"
    #   cache:
    #     size: 100
    #     ttl: 10
    #   userIdStrategy: CaseInsensitive
    #   groupIdStrategy: CaseSensitive
  
  authorizationStrategy:
    globalMatrix:
      grantedPermissions:
        - "Overall/Read:anonymous"

credentials:
  system:
    domainCredentials:
    - credentials:
      - usernamePassword:
          id: 'sonarLogin'
          username: ${SONAR_USER}
          password: ${SONAR_PASSWORD}
          description: 'Sonar account'
          scope: GLOBAL
      - string:
          id: 'sonarToken'
          secret: ${SONAR_TOKEN}
          description: 'Sonar token'
          scope: GLOBAL
      - string:
          id: 'slackToken'
          secret: ${SLACK_TOKEN}
          description: 'Slack token'
          scope: GLOBAL
unclassified:
  location:
    url: ${JENKINS_URL}
  # slackNotifier:
  #   teamDomain: ${SLACK_TEAM_DOMAIN}
  #   tokenCredentialId: slackToken

tool:
  git:
    installations:
      - name: git
        home: /usr/local/bin/git
  maven:
    installations:
      - name: maven3
        home: "/maven3"
        properties:
          - installSource:
              installers:
                - maven:
                    id: "3.8.4"

jobs:
  - script: >
      def microservices = ["adservice", "cartservice", "checkoutservice", "currencyservice", "emailservice", "frontend", 
      "loadgenerator", "paymentservice", "productcatalogservice", "recommendationservice", "shippingservice"]

      microservices.each { jobName ->
          pipelineJob(jobName) {
              definition {
                  cpsScm {
                      scm {
                          git {
                              remote {
                                  url('https://gitlab.com/gitops-freddieentity/application')
                              }
                              branch('*/main')
                          }
                      }
                      scriptPath(jobName + '/Jenkinsfile')
                  }
              }
          }
      }
