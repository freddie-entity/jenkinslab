version: '3.7'
services:
  jenkins:
    build: ./jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    networks:
      - cisystem
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

    env_file: ./jenkins/secrets.env
    restart: always
    # depends_on:
    #   - slapd

  postgres:
    image: postgres:9.6
    networks:
      - cisystem
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonarpasswd
    volumes:
      - postgres_data:/var/lib/postgresql/data
      
  sonarqube:
    image: sonarqube:9.9.1-community
    ports:
      - "9000:9000"
      - "9092:9092"
    networks:
      - cisystem
    volumes:
      - ./plugins:/opt/sonarqube/extensions/plugins
    environment:
      SONARQUBE_JDBC_USERNAME: sonar
      SONARQUBE_JDBC_PASSWORD: sonarpasswd
      SONARQUBE_JDBC_URL: "jdbc:postgresql://postgres:5432/sonar"
      SONAR_WEB_JAVAADDITIONALOPTS: -javaagent:./extensions/plugins/sonarqube-community-branch-plugin-1.14.0.jar=web
      SONAR_CE_JAVAADDITIONALOPTS: -javaagent:./extensions/plugins/sonarqube-community-branch-plugin-1.14.0.jar=ce
    depends_on: 
      - postgres

  nexus:
    image: sonatype/nexus3:3.60.0
    volumes:
      - nexus_data:/sonatype-work
    ports:
      - "8081:8081"
    networks:
      - cisystem

  # slapd:
  #   build:
  #     context: ./slapd
  #   ports:
  #     - 389:389
  #     - 636:636
  #   networks:
  #     - cisystem

  # phpldapadmin:
  #   image: docker.io/osixia/phpldapadmin:0.9.0
  #   environment:
  #     PHPLDAPADMIN_LDAP_HOSTS: slapd
  #     PHPLDAPADMIN_HTTPS: 'false'
  #   networks:
  #     - cisystem
  #   ports:
  #     - 8090:80
  #   depends_on:
  #     - slapd
  
  # agent-java:
  #   hostname: "agent-java"
  #   build: ./agent-java
  #   ports:
  #     - 22:22
  #   networks:
  #     - cisystem
  #   env_file: ./agent-java/secrets.env

networks:
  cisystem:

volumes:
  my_jenkins_home:
  postgres_data:
  nexus_data: